name: docs-deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: docs-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack (pnpm)
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Scaffold Docusaurus (ephemeral website/)
        run: |
          pnpm dlx create-docusaurus@latest website classic --typescript --skip-install

      - name: Install dependencies (website)
        working-directory: website
        run: pnpm install --frozen-lockfile=false

      - name: Use repo docs/ as site content
        run: |
          mkdir -p website/docs
          if [ -d docs ]; then rsync -a --delete docs/ website/docs/; fi

      - name: Apply repository Docusaurus overrides
        run: |
          # Allow custom config + supporting files to live at repo root or under docs/
          for base in . docs; do
            if [ -f "$base/docusaurus.config.ts" ]; then cp "$base/docusaurus.config.ts" website/docusaurus.config.ts; fi
            if [ -f "$base/docusaurus.config.js" ]; then cp "$base/docusaurus.config.js" website/docusaurus.config.js; fi
            if [ -f "$base/docusaurus.config.cjs" ]; then cp "$base/docusaurus.config.cjs" website/docusaurus.config.cjs; fi
            if [ -f "$base/sidebars.ts" ]; then cp "$base/sidebars.ts" website/sidebars.ts; fi
            if [ -f "$base/sidebars.js" ]; then cp "$base/sidebars.js" website/sidebars.js; fi
            if [ -f "$base/sidebars.cjs" ]; then cp "$base/sidebars.cjs" website/sidebars.cjs; fi
            if [ -d "$base/static" ]; then rsync -a --delete "$base/static/" website/static/; fi
            if [ -d "$base/src" ]; then rsync -a "$base/src/" website/src/; fi
          done

      - name: Patch Docusaurus config for GitHub Pages
        working-directory: website
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const owner = process.env.OWNER;
          const repo = process.env.REPO_NAME;
          const supportedConfigs = [
            'docusaurus.config.ts',
            'docusaurus.config.js',
            'docusaurus.config.cjs',
          ];
          const configPath = supportedConfigs.find((file) => fs.existsSync(file));
          if (!configPath) {
            console.warn('No Docusaurus config file detected; skipping patch');
            process.exit(0);
          }
          let s = fs.readFileSync(configPath, 'utf8');
          function set(k, v){
            const re = new RegExp(`${k}:\\s*['\"].*?['\"]`);
            if (re.test(s)) s = s.replace(re, `${k}: '${v}'`);
            else s = s.replace(/export default\s*\{/, m => `${m}\n  ${k}: '${v}',`);
          }
          set('url', `https://${owner}.github.io`);
          set('baseUrl', `/${repo}/`);
          set('organizationName', owner);
          set('projectName', repo);
          fs.writeFileSync(configPath, s);
          NODE

      - name: Build Docusaurus site
        working-directory: website
        run: pnpm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: website/build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
