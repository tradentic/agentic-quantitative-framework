prefect-version: "3.0.0"

deployments:
  - name: embedding-refresh-dev
    flow_name: supabase-embedding-refresh
    entrypoint: flows/embedding_flow.py:supabase_embedding_refresh
    work_pool:
      &docker_pool
      name: my-docker-pool
      job_variables:
        image: "{{ env.get('PREFECT_WORK_POOL_IMAGE', 'prefecthq/prefect:3-python3.11') }}"
        image_pull_policy: IfNotPresent
        env:
          PREFECT_LOGGING_LEVEL: INFO
          PREFECT_API_URL: "http://prefect-server-dev:4200/api"
          PREFECT_UI_API_URL: "/api"
          PREFECT_SERVER_UI_API_URL: "/api"
    parameters:
      limit: 5
    schedule:
      interval: 600
  - name: scheduled-backtest-dev
    flow_name: scheduled-backtest-runner
    entrypoint: flows/backtest_flow.py:scheduled_backtest_runner
    work_pool:
      <<: *docker_pool
    parameters:
      limit: 3
    schedule:
      interval: 900
  - name: nightly-prune-dev
    flow_name: scheduled-vector-prune
    entrypoint: flows/prune_flow.py:scheduled_vector_prune
    work_pool:
      <<: *docker_pool
    schedule:
      cron: "0 3 * * *"
    parameters:
      max_age_days: 120
      min_t_stat: 0.25
      regime_diversity: 2
  - name: ingest-sec-form4
    flow_name: ingest-sec-form4
    entrypoint: flows/ingest_sec_form4.py:ingest_form4
    work_pool:
      <<: *docker_pool
    parameters:
      date_from: "{{ (pendulum.now('UTC') - pendulum.duration(days=1)).to_date_string() }}"
      date_to: "{{ (pendulum.now('UTC') - pendulum.duration(days=1)).to_date_string() }}"
    schedule:
      # cron: "15 1 * * *"
  - name: compute-offexchange
    flow_name: compute-offexchange-features
    entrypoint: flows/compute_offexchange_features.py:compute_offexchange_features
    work_pool:
      <<: *docker_pool
    parameters:
      trade_date: "{{ (pendulum.now('UTC') - pendulum.duration(days=1)).to_date_string() }}"
      symbols: []
      persist: true
    schedule:
      # cron: "5 11 * * 2-6"
  - name: compute-intraday
    flow_name: compute-intraday-features
    entrypoint: flows/compute_intraday_features.py:compute_intraday_features
    work_pool:
      <<: *docker_pool
    parameters:
      trade_date: "{{ (pendulum.now('UTC') - pendulum.duration(days=1)).to_date_string() }}"
      symbols: []
      persist: false
    schedule:
      # cron: "*/30 13-20 * * 1-5"
  - name: monitor-nvda-insider
    flow_name: monitor-nvda-insider
    entrypoint: flows/monitor_nvda_insider.py:monitor_nvda_insider
    work_pool:
      <<: *docker_pool
    schedule:
      cron: "0 21 * * 1-5"
#
# Additional experimental flows (fingerprint vectorization, similarity scans, manual backtests)
# require interactive parameter input and have been removed from the automatic deployment set.
# They can be registered manually with `prefect deploy --select <name>` once parameter defaults
# are defined.
